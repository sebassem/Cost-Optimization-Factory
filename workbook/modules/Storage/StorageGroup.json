{
  "type": 12,
  "content": {
    "version": "NotebookGroup/1.0",
    "groupType": "editable",
    "title": "Storage Group",
    "items": [
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "title": "StorageGroup",
          "items": [
            {
              "type": 12,
              "content": {
                "version": "NotebookGroup/1.0",
                "groupType": "editable",
                "items": [
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "advisorresources\r\n| where type == \"microsoft.advisor/recommendations\"\r\n| where tostring (properties.category) has \"Cost\"\r\n| where properties.impactedField has \"Storage\"\r\n| project AffectedResource=tostring(properties.resourceMetadata.resourceId),Impact=properties.impact,resourceGroup,AdditionaInfo=properties.extendedProperties,subscriptionId,Recommendation=tostring(properties.shortDescription.problem),name\r\n| where resourceGroup in ({ResourceGroup})\r\n",
                      "size": 0,
                      "title": "Azure Advisor Cost recommendations - Storage",
                      "noDataMessage": "You are following all of our cost recommendations for Storage",
                      "noDataMessageStyle": 3,
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscription}"
                      ],
                      "gridSettings": {
                        "hierarchySettings": {
                          "treeType": 1,
                          "groupBy": [
                            "Recommendation"
                          ],
                          "expandTopLevel": true
                        }
                      }
                    },
                    "name": "Get-AdvisorRecommendations-Storage"
                  },
                  {
                    "type": 1,
                    "content": {
                      "json": "# Storage accounts\r\nGeneral-purpose v2 storage accounts support the latest Azure Storage features and incorporate all of the functionality of general-purpose v1 and Blob storage accounts. General-purpose v2 accounts are recommended for most storage scenarios.\r\n\r\n1. General-purpose v2 accounts deliver the lowest per-gigabyte capacity prices for Azure Storage, as well as industry-competitive transaction prices.\r\n2. General-purpose v2 accounts support default account access tiers of hot or cool and blob level tiering between hot, cool, or archive.\r\n3. General-purpose v2 accounts allows you to also use lifecycle management to optimize your storage cost",
                      "style": "upsell"
                    },
                    "name": "text - 2"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources \r\n| where type =~ 'Microsoft.Storage/StorageAccounts' and kind !='StorageV2' and kind !='FileStorage'\r\n| where resourceGroup in ({ResourceGroup})\r\n| extend StorageAccountName=name, SAKind=kind,AccessTier=tostring(properties.accessTier),SKUName=sku.name, SKUTier=sku.tier, Location=location\r\n| order by id asc\r\n| project id,StorageAccountName, SKUName, SKUTier, SAKind,AccessTier, resourceGroup, Location, subscriptionId\r\n| join kind = innerunique(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | distinct id\r\n    )\r\n    on id",
                      "size": 0,
                      "title": "Storage accounts which are not v2",
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscription}"
                      ],
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "storageaccount",
                            "formatter": 13,
                            "formatOptions": {
                              "linkTarget": "Resource",
                              "subTarget": "insights",
                              "linkIsContextBlade": true,
                              "showIcon": true
                            }
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 15,
                            "formatOptions": {
                              "linkTarget": null,
                              "showIcon": true
                            }
                          }
                        ]
                      }
                    },
                    "name": "Get-Storagev1"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources \r\n| where type =~ 'microsoft.compute/disks' and managedBy == \"\"\r\n| where resourceGroup in ({ResourceGroup})\r\n| extend diskState = tostring(properties.diskState)\r\n| where managedBy == \"\" and diskState != 'ActiveSAS'\r\nor diskState == 'Unattached' and diskState != 'ActiveSAS'\r\n| extend DiskId=id, DiskIDfull=id, DiskName=name, SKUName=sku.name, SKUTier=sku.tier, DiskSizeGB=tostring(properties.diskSizeGB), Location=location, TimeCreated=tostring(properties.timeCreated), QuickFix=id\r\n| order by DiskId asc \r\n| project DiskId, DiskIDfull, DiskName, DiskSizeGB, SKUName, SKUTier, resourceGroup, QuickFix, Location, TimeCreated, subscriptionId\r\n",
                      "size": 0,
                      "title": "Unattached disks",
                      "noDataMessage": "There isn't any unnatached disks!",
                      "noDataMessageStyle": 3,
                      "exportedParameters": [
                        {
                          "fieldName": "DiskIDfull",
                          "parameterName": "DiskID"
                        },
                        {
                          "fieldName": "DiskName",
                          "parameterName": "DiskName",
                          "parameterType": 1
                        },
                        {
                          "fieldName": "resourceGroup",
                          "parameterName": "ResourceGroup",
                          "parameterType": 1
                        }
                      ],
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscription}"
                      ],
                      "visualization": "table",
                      "gridSettings": {
                        "formatters": [
                          {
                            "columnMatch": "DiskIDfull",
                            "formatter": 5
                          },
                          {
                            "columnMatch": "QuickFix",
                            "formatter": 7,
                            "formatOptions": {
                              "linkTarget": "ArmAction",
                              "linkLabel": "Remove Idle Disk",
                              "linkIsContextBlade": true,
                              "templateRunContext": {
                                "componentIdSource": "column",
                                "componentId": "DiskId",
                                "templateUriSource": "static",
                                "templateUri": "https://raw.githubusercontent.com/sebassem/MS-learn-Workbooks/main/Deploy-Tag.json",
                                "templateParameters": [
                                  {
                                    "name": "DiskID",
                                    "source": "static",
                                    "value": "DiskId",
                                    "kind": "stringValue"
                                  }
                                ],
                                "titleSource": "static",
                                "title": "Remove Idle Disk",
                                "descriptionSource": "static",
                                "description": "# Description\r\nThis ARM Template will remove the selected disk.\r\n\r\n# Actions:\r\n- Click \"Remove Idle Disk\" to remove the selected item.\r\n- Click View Template to examine the template and parameters used during deployment\r\n\r\n\r\n\r\n",
                                "runLabelSource": "static",
                                "runLabel": "Remove Idle Disk"
                              },
                              "armActionContext": {
                                "path": "/{DiskID}?api-version=2021-04-01",
                                "headers": [],
                                "params": [
                                  {
                                    "key": "DiskID",
                                    "value": ""
                                  }
                                ],
                                "httpMethod": "DELETE",
                                "title": "Remove Idle Disks",
                                "description": "# Disk Deletion Warning: {DiskName}\r\n\r\n**Attention!**\r\n\r\nThis action will permanently remove the disk with the name **{DiskName}**. Please ensure that this disk is not currently in use and that you are deleting the correct disk.\r\n\r\n**Resource Details:**\r\n\r\n- Disk Name: {DiskName}\r\n- Resource Group: {ResourceGroup}\r\n\r\n### Required RBAC Permissions\r\n\r\nTo perform this action, you need to have **Contributor** permissions on the Resource Group where the disk is located.\r\n\r\nPlease review the information carefully before proceeding with the deletion.\r\n",
                                "actionName": "Removing Idle Dsk",
                                "runLabel": "I understand, remove disk {DiskName}"
                              }
                            }
                          },
                          {
                            "columnMatch": "subscriptionId",
                            "formatter": 15,
                            "formatOptions": {
                              "linkTarget": null,
                              "showIcon": true
                            }
                          }
                        ],
                        "rowLimit": 1000
                      }
                    },
                    "name": "Get-Idle-Disk"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources\r\n| where type == 'microsoft.compute/snapshots'\r\n| where resourceGroup in ({ResourceGroup})\r\n| extend TimeCreated = properties.timeCreated\r\n| where TimeCreated < ago(30d)\r\n| order by id asc \r\n| project id, resourceGroup, location, TimeCreated ,subscriptionId\r\n| join kind = innerunique(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | distinct id\r\n    )\r\n    on id",
                      "size": 0,
                      "title": "Disk Snapshots with + 30 Days",
                      "noDataMessage": "No Snapshots with more than 30 days.",
                      "noDataMessageStyle": 3,
                      "showExportToExcel": true,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscription}"
                      ]
                    },
                    "name": "Get-Old-Snapshots"
                  },
                  {
                    "type": 3,
                    "content": {
                      "version": "KqlItem/1.0",
                      "query": "resources\r\n| where type == 'microsoft.compute/snapshots'\r\n| where resourceGroup in ({ResourceGroup})\r\n| extend name, resourceGroup, SnapshotLocation=location, TimeCreated=tostring(properties.timeCreated), SourceDisk=tostring(properties.creationData.sourceResourceId),subscriptionId\r\n| project id, name, resourceGroup, SnapshotLocation, TimeCreated=tostring(properties.timeCreated), SourceDisk=tostring(properties.creationData.sourceResourceId), subscriptionId \r\n| join kind=leftouter  (\r\nresources\r\n| where type =~ 'microsoft.compute/disks'\r\n| extend SourceDisk=id ) on SourceDisk\r\n| where isempty(managedBy)\r\n| join kind = innerunique(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | distinct id\r\n    )\r\n    on id",
                      "size": 0,
                      "title": "Snapshots of disks that doesn't exist anymore",
                      "noDataMessage": "There aren't any idle disk snapshot",
                      "noDataMessageStyle": 3,
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "crossComponentResources": [
                        "{Subscription}"
                      ]
                    },
                    "name": "Get-Idle-Snapshot"
                  }
                ]
              },
              "conditionalVisibility": {
                "parameterName": "RG_Filter",
                "comparison": "isNotEqualTo",
                "value": "Tags"
              },
              "name": "Storage - subscription"
            }
          ]
        },
        "conditionalVisibility": {
          "parameterName": "SelectedTab",
          "comparison": "isEqualTo",
          "value": "Storage"
        },
        "name": "StorageGroup"
      }
    ]
  },
  "conditionalVisibility": {
    "parameterName": "SelectedTab",
    "comparison": "isEqualTo",
    "value": "Storage"
  },
  "name": "StorageGroup",
  "styleSettings": {
    "showBorder": true
  }
}